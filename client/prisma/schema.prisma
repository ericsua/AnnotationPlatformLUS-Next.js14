generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  // change this if you want to change the database used (remote or local) and
  // generate the new Prisma Client with 
  // 'npx prisma generate' and 'npx prisma db push'
  url      = env("DATABASE_URL") // remote: DATABASE_URL, local: DATABASE_URL_LOCAL
}

model users {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  email         String        @unique
  password      String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  video         videos?       @relation(fields: [latestVideoId], references: [id])
  latestVideoId String?       @db.ObjectId
  annotations   annotations[]
  emailVerified Boolean       @default(false)
}

model videos {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  v           Int           @map("__v")
  description String
  extension   String
  filename    String
  status      String
  title       String
  user        users[]
  annotations annotations[]
}

model annotations {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  video   videos   @relation(fields: [videoId], references: [id])
  videoId String   @db.ObjectId
  user    users    @relation(fields: [userId], references: [id])
  userId  String   @db.ObjectId
  date    DateTime
}

model verificationTokens {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model resetPasswordTokens {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}
